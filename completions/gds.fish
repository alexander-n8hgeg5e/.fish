#fish Copyright Â© 2005-2009 Axel Liljencrantz. fish is released under the GNU General Public License, version 2.

source "$COMPLETION_HELPER_FUNCTIONS_DIR"/function_git_ranges.fish
source "$COMPLETION_HELPER_FUNCTIONS_DIR"/function_git_diff_opt.fish

complete -c gds -f -l pretty -a '(__fish_git_show_opt pretty)'
complete -c gds -l abbrev -d 'Show only a partial prefix instead of the full 40-byte hexadecimal object name'
complete -c gds -l binary -d 'Output a binary diff that can be applied with "git-apply"'
complete -c gds -l check -d 'Warn if changes introduce conflict markers or whitespace errors'
complete -c gds -l color -d 'Show colored diff'
complete -c gds -l color-moved -d 'Moved lines of code are colored differently'
complete -c gds -l color-words -d 'Equivalent to --word-diff=color plus --word-diff-regex=<regex>'
complete -c gds -l compact-summary -d 'Output a condensed summary of extended header information'
complete -c gds -l dst-prefix -d 'Show the given destination prefix instead of "b/"'
complete -c gds -l ext-diff -d 'Allow an external diff helper to be executed'
complete -c gds -l find-copies-harder -d 'Inspect unmodified files as candidates for the source of copy'
complete -c gds -l find-object -d 'Look for differences that change the number of occurrences of the specified object'
complete -c gds -l full-index -d 'Show the full pre- and post-image blob object names on the "index" line'
complete -c gds -l histogram -d 'Generate a diff using the "histogram diff" algorithm'
complete -c gds -l ignore-blank-lines -d 'Ignore changes whose lines are all blank'
complete -c gds -l ignore-cr-at-eol -d 'Ignore carrige-return at the end of line when doing a comparison'
complete -c gds -l ignore-space-at-eol -d 'Ignore changes in whitespace at EOL'
complete -c gds -l indent-heuristic -d 'Enable the heuristic that shift diff hunk boundaries'
complete -c gds -l inter-hunk-context -d 'Show the context between diff hunks, up to the specified number of lines'
complete -c gds -l ita-invisible-in-index -d 'Make the entry appear as a new file in "git diff" and non-existent in "git diff -l cached"'
complete -c gds -l line-prefix -d 'Prepend an additional prefix to every line of output'
complete -c gds -l minimal -d 'Spend extra time to make sure the smallest possible diff is produced'
complete -c gds -l name-only -d 'Show only names of changed files'
complete -c gds -l name-status -d 'Show only names and status of changed files'
complete -c gds -l no-color -d 'Turn off colored diff'
complete -c gds -l no-ext-diff -d 'Disallow external diff drivers'
complete -c gds -l no-indent-heuristic -d 'Disable the indent heuristic'
complete -c gds -l no-prefix -d 'Do not show any source or destination prefix'
complete -c gds -l no-renames -d 'Turn off rename detection'
complete -c gds -l no-textconv -d 'Disallow external text conversion filters to be run when comparing binary files'
complete -c gds -l numstat -d 'Shows number of added/deleted lines in decimal notation'
complete -c gds -l patch-with-raw -d 'Synonym for -p --raw'
complete -c gds -l patch-with-stat -d 'Synonym for -p --stat'
complete -c gds -l patience -d 'Generate a diff using the "patience diff" algorithm'
complete -c gds -l pickaxe-all -d 'When -S or -G finds a change, show all the changes in that changeset'
complete -c gds -l pickaxe-regex -d 'Treat the <string> given to -S as an extended POSIX regular expression to match'
complete -c gds -l relative -d 'Exclude changes outside the directory and show relative pathnames'
complete -c gds -l shortstat -d 'Output only the last line of the --stat format containing total number of modified files'
complete -c gds -l src-prefix -d 'Show the given source prefix instead of "a/"'
complete -c gds -l summary -d 'Output a condensed summary of extended header information'
complete -c gds -l textconv -d 'Allow external text conversion filters to be run when comparing binary files'
complete -c gds -l word-diff -d 'Show a word diff'
complete -c gds -l word-diff-regex -d 'Use <regex> to decide what a word is'
complete -c gds -s a -l text -d 'Treat all files as text'
complete -c gds -s B -l break-rewrites -d 'Break complete rewrite changes into pairs of delete and create'
complete -c gds -s b -l ignore-space-change -d 'Ignore changes in amount of whitespace'
complete -c gds -s C -l find-copies -d 'Detect copies as well as renames'
complete -c gds -s D -l irreversible-delete -d 'Omit the preimage for deletes'
complete -c gds -s G -d 'Look for differences whose patch text contains added/removed lines that match <regex>'
complete -c gds -s M -l find-renames -d 'Detect and report renames'
complete -c gds -s R -d 'Show differences from index or on-disk file to tree contents'
complete -c gds -s S -d 'Look for differences that change the number of occurrences of the specified string'
complete -c gds -s W -l function-context -d 'Show whole surrounding functions of changes'
complete -c gds -s w -l ignore-all-space -d 'Ignore whitespace when comparing lines'
complete -c gds -s z -d 'Use NULs as output field/commit terminators'
complete -c gds -r -s O -d 'Control the order in which files appear in the output'
complete -c gds -f -l anchored -d 'Generate a diff using the "anchored diff" algorithm'
complete -c gds -x -s l -d 'Prevents rename/copy detection if the number of rename/copy targets exceeds the specified number'
complete -c gds -x -l diff-filter -a '(__fish_git_diff_opt diff-filter)' -d 'Choose diff filters'
complete -c gds -x -l diff-algorithm -a '(__fish_git_diff_opt diff-algorithm)' -d 'Choose a diff algorithm'
complete -c gds -x -l dirstat -a '(__fish_git_diff_opt dirstat)' -d 'Output the distribution of relative amount of changes for each sub-directory'
complete -c gds -x -l ignore-submodules -a '(__fish_git_diff_opt ignore-submodules)' -d 'Ignore changes to submodules in the diff generation'
complete -c gds -x -l submodule -a '(__fish_git_diff_opt submodule)' -d 'Specify how differences in submodules are shown'
complete -c gds -x -l ws-error-highlight -a '(__fish_git_diff_opt ws-error-highlight)' -d 'Highlight whitespace errors in lines of the diff'

complete -c gds -a '(__fish_git_ranges)'
complete -c gds -l cached -d 'Show diff of changes in the index'
complete -c gds -l no-index -d 'Compare two paths on the filesystem'
complete -c gds -l exit-code -d 'Exit with 1 if there were differences or 0 if no differences'
complete -c gds -s q -l quiet -d 'Disable all output of the program, implies --exit-code'
complete -c gds -s 1 -l base -d 'Compare the working tree with the "base" version'
complete -c gds -s 2 -l ours -d 'Compare the working tree with the "our branch"'
complete -c gds -s 3 -l theirs -d 'Compare the working tree with the "their branch"'
complete -c gds -s 0 -d 'Omit diff output for unmerged entries and just show "Unmerged"'
complete -c gds -f -a '(__fish_git_files modified deleted)'
